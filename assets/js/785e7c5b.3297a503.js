"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[9529],{1070:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>c,frontMatter:()=>n,metadata:()=>a,toc:()=>o});var t=s(5893),i=s(1151);const n={sidebar_position:4},d="Extensions",a={id:"visualiser/3-1-user-guide/extensions",title:"Extensions",description:"Adapters",source:"@site/docs/3-visualiser/3-1-user-guide/extensions.md",sourceDirName:"3-visualiser/3-1-user-guide",slug:"/visualiser/3-1-user-guide/extensions",permalink:"/docs/visualiser/3-1-user-guide/extensions",draft:!1,unlisted:!1,editUrl:"https://github.com/path-visualiser/path-visualiser.github.io/tree/master/docs/3-visualiser/3-1-user-guide/extensions.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Layers",permalink:"/docs/visualiser/3-1-user-guide/layers"},next:{title:"Pixel renderer",permalink:"/docs/visualiser/pixel-renderer"}},l={},o=[{value:"Adapters",id:"adapters",level:2},{value:"Built-in adapters",id:"built-in-adapters",level:3},{value:"Other adapters",id:"other-adapters",level:3},{value:"Renderers",id:"renderers",level:2},{value:"Built-in renderers",id:"built-in-renderers",level:3},{value:"Map support",id:"map-support",level:2},{value:"Built-in map formats",id:"built-in-map-formats",level:3}];function h(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"extensions",children:"Extensions"}),"\n",(0,t.jsx)(r.h2,{id:"adapters",children:"Adapters"}),"\n",(0,t.jsxs)(r.p,{children:["Adapters implement the ",(0,t.jsx)(r.a,{href:"/docs/visualiser-adapter-protocol",children:"Visualiser Adapter Protocol"})," to connect solvers to Posthoc."]}),"\n",(0,t.jsx)(r.h3,{id:"built-in-adapters",children:"Built-in adapters"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"URL"}),(0,t.jsx)(r.th,{children:"Connection Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Basic Maps"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"internal://basic-maps"})}),(0,t.jsx)(r.td,{children:"Internal"}),(0,t.jsx)(r.td,{children:"A collection of basic grid maps."})]})})]}),"\n",(0,t.jsx)(r.h3,{id:"other-adapters",children:"Other adapters"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"URL"}),(0,t.jsx)(r.th,{children:"Connection Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Warthog (WebAssembly)"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"https://cdn.jsdelivr.net/gh/path-visualiser/app@adapter-warthog-wasm-dist/warthog-wasm.mjs"})}),(0,t.jsx)(r.td,{children:"Web Worker"}),(0,t.jsx)(r.td,{children:"Solver adapter for Warthog & Roadhog"})]})})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://github.com/path-visualiser/app",children:"You can find more adapters here."})}),"\n",(0,t.jsx)(r.h2,{id:"renderers",children:"Renderers"}),"\n",(0,t.jsxs)(r.p,{children:["Renderers are used by the ",(0,t.jsx)(r.strong,{children:"viewport"})," view to render visualisations. They're defined by the primitives they support. For example, the ",(0,t.jsx)(r.strong,{children:"Pixel"})," renderer supports drawing ",(0,t.jsx)(r.code,{children:"rect"}),", ",(0,t.jsx)(r.code,{children:"circle"})," etc., so any map or search trace that compiles to those primitives can be drawn by ",(0,t.jsx)(r.strong,{children:"Pixel"}),". The API for renderers are yet to be finalised. We'll soon let you define custom renderers."]}),"\n",(0,t.jsx)(r.h3,{id:"built-in-renderers",children:"Built-in renderers"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"URL"}),(0,t.jsx)(r.th,{children:"Connection Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Pixel"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"internal://d2-renderer"})}),(0,t.jsx)(r.td,{children:"Internal"}),(0,t.jsxs)(r.td,{children:["Comfortably performant 2D renderer. Provides ",(0,t.jsx)(r.code,{children:"rect"}),", ",(0,t.jsx)(r.code,{children:"circle"}),", ",(0,t.jsx)(r.code,{children:"path"}),", ",(0,t.jsx)(r.code,{children:"polygon"}),"."]})]})})]}),"\n",(0,t.jsx)(r.h2,{id:"map-support",children:"Map support"}),"\n",(0,t.jsx)(r.p,{children:"Maps are an escape-hatch from search traces, and allows you to hard-code a visualisation for any filetype."}),"\n",(0,t.jsxs)(r.p,{children:["Posthoc supports the following map formats by default. This list also shows up in ",(0,t.jsx)(r.strong,{children:"Settings view > Extensions > Map support"}),". We'll soon let you define custom formats via extensions."]}),"\n",(0,t.jsx)(r.h3,{id:"built-in-map-formats",children:"Built-in map formats"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Format"}),(0,t.jsx)(r.th,{children:"Extension"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Grid"}),(0,t.jsxs)(r.td,{children:[(0,t.jsx)(r.code,{children:"*.grid"}),", ",(0,t.jsx)(r.code,{children:"*.map"})]}),(0,t.jsxs)(r.td,{children:["Moving AI grid map format. ",(0,t.jsx)(r.a,{href:"https://movingai.com/benchmarks/formats.html",children:"Learn about this format here."})]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Network"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"*.xy"})}),(0,t.jsxs)(r.td,{children:["A single-file alternative of the DIMACS network graph format, obtained using ",(0,t.jsx)(r.code,{children:"dimacs2xy"})," of the Warthog library. ",(0,t.jsxs)(r.a,{href:"https://bitbucket.org/dharabor/pathfinding/src/neomaster/warthog",children:["Learn about XY and ",(0,t.jsx)(r.code,{children:"dimacs2xy"})," here."]})]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Mesh"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"*.mesh"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://bitbucket.org/shortestpathlab/benchmarks/src/master/mesh-maps",children:"Learn about mesh maps here."})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Poly"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"*.poly"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://bitbucket.org/shortestpathlab/benchmarks/src/master/poly-maps/",children:"Learn about poly maps here."})})]})]})]})]})}function c(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,r,s)=>{s.d(r,{Z:()=>a,a:()=>d});var t=s(7294);const i={},n=t.createContext(i);function d(e){const r=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);