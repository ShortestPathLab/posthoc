"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[3047],{6920:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"visualiser/3-1-user-guide/extensions","title":"Extensions","description":"Adapters","source":"@site/docs/3-visualiser/3-1-user-guide/extensions.md","sourceDirName":"3-visualiser/3-1-user-guide","slug":"/visualiser/3-1-user-guide/extensions","permalink":"/docs/visualiser/3-1-user-guide/extensions","draft":false,"unlisted":false,"editUrl":"https://github.com/ShortestPathLab/posthoc/tree/master/docs/3-visualiser/3-1-user-guide/extensions.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Layers","permalink":"/docs/visualiser/3-1-user-guide/layers"},"next":{"title":"Pixel renderer","permalink":"/docs/visualiser/pixel-renderer"}}');var n=s(4848),i=s(8453);const d={sidebar_position:4},l="Extensions",o={},a=[{value:"Adapters",id:"adapters",level:2},{value:"Built-in adapters",id:"built-in-adapters",level:3},{value:"Other adapters",id:"other-adapters",level:3},{value:"Renderers",id:"renderers",level:2},{value:"Built-in renderers",id:"built-in-renderers",level:3},{value:"Map support",id:"map-support",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"extensions",children:"Extensions"})}),"\n",(0,n.jsx)(r.h2,{id:"adapters",children:"Adapters"}),"\n",(0,n.jsxs)(r.p,{children:["Adapters implement the ",(0,n.jsx)(r.a,{href:"/docs/visualiser-adapter-protocol",children:"Visualiser Adapter Protocol"})," to connect solvers to Posthoc."]}),"\n",(0,n.jsx)(r.h3,{id:"built-in-adapters",children:"Built-in adapters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Name"}),(0,n.jsx)(r.th,{children:"URL"}),(0,n.jsx)(r.th,{children:"Connection Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Basic Maps"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"internal://basic-maps"})}),(0,n.jsx)(r.td,{children:"Internal"}),(0,n.jsx)(r.td,{children:"A collection of basic grid maps."})]})})]}),"\n",(0,n.jsx)(r.h3,{id:"other-adapters",children:"Other adapters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Name"}),(0,n.jsx)(r.th,{children:"URL"}),(0,n.jsx)(r.th,{children:"Connection Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsx)(r.tbody,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Warthog (WebAssembly)"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"https://cdn.jsdelivr.net/gh/ShortestPathLab/posthoc-app@adapter-warthog-wasm-dist/warthog-wasm.mjs"})}),(0,n.jsx)(r.td,{children:"Web Worker"}),(0,n.jsx)(r.td,{children:"Solver adapter for Warthog & Roadhog"})]})})]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"https://github.com/ShortestPathLab/posthoc-app",children:"You can find more adapters here."})}),"\n",(0,n.jsx)(r.h2,{id:"renderers",children:"Renderers"}),"\n",(0,n.jsxs)(r.p,{children:["Renderers are used by the ",(0,n.jsx)(r.strong,{children:"viewport"})," view to render visualisations. They're defined by the primitives they support. For example, the ",(0,n.jsx)(r.strong,{children:"Pixel"})," renderer supports drawing ",(0,n.jsx)(r.code,{children:"rect"}),", ",(0,n.jsx)(r.code,{children:"circle"})," etc., so any map or search trace that compiles to those primitives can be drawn by ",(0,n.jsx)(r.strong,{children:"Pixel"}),". The API for renderers are yet to be finalised. We'll soon let you define custom renderers."]}),"\n",(0,n.jsx)(r.h3,{id:"built-in-renderers",children:"Built-in renderers"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Name"}),(0,n.jsx)(r.th,{children:"URL"}),(0,n.jsx)(r.th,{children:"Connection Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/visualiser/pixel-renderer",children:"Pixel"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"internal://d2-renderer"})}),(0,n.jsx)(r.td,{children:"Internal"}),(0,n.jsxs)(r.td,{children:["Comfortably performant 2D renderer. Provides ",(0,n.jsx)(r.code,{children:"rect"}),", ",(0,n.jsx)(r.code,{children:"circle"}),", ",(0,n.jsx)(r.code,{children:"path"}),", ",(0,n.jsx)(r.code,{children:"polygon"}),"."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/visualiser/pixel-nano-renderer",children:"Pixel Nano"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"internal://d2-minimal-renderer"})}),(0,n.jsx)(r.td,{children:"Internal"}),(0,n.jsxs)(r.td,{children:["Simple 2D renderer. Provides ",(0,n.jsx)(r.code,{children:"rect"}),", ",(0,n.jsx)(r.code,{children:"circle"}),", ",(0,n.jsx)(r.code,{children:"path"}),", ",(0,n.jsx)(r.code,{children:"polygon"}),"."]})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"map-support",children:"Map support"}),"\n",(0,n.jsx)(r.p,{children:"Maps are an escape-hatch from search traces, and allows you to hard-code a visualisation for any filetype."}),"\n",(0,n.jsxs)(r.p,{children:["Posthoc supports the following map formats by default. This list also shows up in ",(0,n.jsx)(r.strong,{children:"Settings view > Extensions > Map support"}),". We'll soon let you define custom formats via extensions."]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"./layers#built-in-map-formats",children:"Read about built-in map support here."})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>d,x:()=>l});var t=s(6540);const n={},i=t.createContext(n);function d(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);