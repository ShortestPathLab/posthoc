"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[3137],{133:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/pixel-nano-04a072696c6f8996f330fd9779e64bcf.png"},2957:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"visualiser/pixel-nano-renderer","title":"Pixel Nano renderer","description":"Pixel Nano is a minimalist renderer. It works just like Pixel, except it runs on the main thread, doesn\'t support fancy features like tiling, dynamic resolution or infinite zoom, and doesn\'t scale as well for large problems.","source":"@site/docs/3-visualiser/pixel-nano-renderer.md","sourceDirName":"3-visualiser","slug":"/visualiser/pixel-nano-renderer","permalink":"/docs/visualiser/pixel-nano-renderer","draft":false,"unlisted":false,"editUrl":"https://github.com/ShortestPathLab/posthoc/tree/master/docs/3-visualiser/pixel-nano-renderer.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Pixel Nano renderer"},"sidebar":"tutorialSidebar","previous":{"title":"Pixel renderer","permalink":"/docs/visualiser/pixel-renderer"},"next":{"title":"Contributing","permalink":"/docs/visualiser/contributing"}}');var r=i(4848),t=i(8453);const o={sidebar_position:4,title:"Pixel Nano renderer"},l="Pixel Nano",a={},d=[{value:"Getting Pixel Nano",id:"getting-pixel-nano",level:2},{value:"Primitives",id:"primitives",level:2}];function c(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"pixel-nano",children:"Pixel Nano"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pixel Nano"})," is a minimalist renderer. It works just like ",(0,r.jsx)(n.strong,{children:"Pixel"}),", except it runs on the main thread, doesn't support fancy features like tiling, dynamic resolution or infinite zoom, and doesn't scale as well for large problems."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Pixel Nano",src:i(133).A+"",width:"2560",height:"1528"})}),"\n",(0,r.jsxs)(n.p,{children:["However because there's much less overhead to run ",(0,r.jsx)(n.strong,{children:"Pixel Nano"}),", you might find that for smaller problems, it looks and performs better."]}),"\n",(0,r.jsx)(n.h2,{id:"getting-pixel-nano",children:"Getting Pixel Nano"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pixel Nano"})," is bundled with ",(0,r.jsx)(n.strong,{children:"Posthoc"}),", but not enabled by default."]}),"\n",(0,r.jsxs)(n.p,{children:["To enable Pixel Nano, add ",(0,r.jsx)(n.a,{href:"/docs/visualiser/3-1-user-guide/extensions#built-in-renderers",children:"Pixel Nano's URL"})," to the Renderers list in ",(0,r.jsx)(n.a,{href:"/docs/visualiser/3-1-user-guide/interface#settings",children:"Posthoc's settings"}),". Then, select ",(0,r.jsx)(n.strong,{children:"Pixel Nano"})," as the renderer for a viewport:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Selecting Pixel Nano",src:i(6922).A+"",width:"361",height:"222"})}),"\n",(0,r.jsx)(n.h1,{id:"api",children:"API"}),"\n",(0,r.jsx)(n.h2,{id:"primitives",children:"Primitives"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pixel Nano"})," supports the same primitives as ",(0,r.jsx)(n.strong,{children:"Pixel"}),". ",(0,r.jsx)(n.a,{href:"/docs/visualiser/pixel-renderer#primitives",children:"See here"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},6922:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/select-pixel-nano-e0e83961a56d22f9bf26a4a6462e30df.png"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);