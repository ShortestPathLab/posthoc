"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"1.2.4","metadata":{"permalink":"/blog/1.2.4","editUrl":"https://github.com/path-visualiser/path-visualiser.github.io/tree/master/blog/2024-05-08-changelog/index.md","source":"@site/blog/2024-05-08-changelog/index.md","title":"Posthoc v1.2.4","description":"[Todo]","date":"2024-05-08T00:00:00.000Z","formattedDate":"May 8, 2024","tags":[{"label":"changelog","permalink":"/blog/tags/changelog"},{"label":"v1.2.4","permalink":"/blog/tags/v-1-2-4"}],"readingTime":0.005,"hasTruncateMarker":false,"authors":[{"name":"Kevin Zheng","title":"Posthoc lead developer","url":"https://github.com/spaaaacccee","imageURL":"https://github.com/spaaaacccee.png","key":"kzheng"}],"frontMatter":{"slug":"1.2.4","title":"Posthoc v1.2.4","authors":["kzheng"],"tags":["changelog","v1.2.4"]},"unlisted":false,"nextItem":{"title":"Posthoc v1.2.0","permalink":"/blog/1.2.0"}},"content":"[Todo]"},{"id":"1.2.0","metadata":{"permalink":"/blog/1.2.0","editUrl":"https://github.com/path-visualiser/path-visualiser.github.io/tree/master/blog/2024-03-01-changelog/index.md","source":"@site/blog/2024-03-01-changelog/index.md","title":"Posthoc v1.2.0","description":"UI","date":"2024-03-01T00:00:00.000Z","formattedDate":"March 1, 2024","tags":[{"label":"changelog","permalink":"/blog/tags/changelog"},{"label":"v1.2.0","permalink":"/blog/tags/v-1-2-0"}],"readingTime":2.77,"hasTruncateMarker":false,"authors":[{"name":"Kevin Zheng","title":"Posthoc lead developer","url":"https://github.com/spaaaacccee","imageURL":"https://github.com/spaaaacccee.png","key":"kzheng"}],"frontMatter":{"slug":"1.2.0","title":"Posthoc v1.2.0","authors":["kzheng"],"tags":["changelog","v1.2.0"]},"unlisted":false,"prevItem":{"title":"Posthoc v1.2.4","permalink":"/blog/1.2.4"},"nextItem":{"title":"Posthoc v1.0.4","permalink":"/blog/1.0.4"}},"content":"## UI\\n\\n### General UI Improvements\\n\\nWe generally improved the UI, including the addition of a sidebar, to deliver a sleeker and more comfortable experience.\\n\\n![Alt text](./assets/1-03-2024/improved-ui.png)\\n\\nWe improved the usability of the UI under different conditions like when the window gets too small.\\n\\n### Empty Panel Copy\\n\\nWe added copy and a subtle design to panels that are empty to indicate that an action (like loading a trace) is required before they become active.\\n\\n[Clip: Empty Panels](./assets/1-03-2024/1.2.0-empty-panels.mp4)\\n\\n### Layer Editor Panel Redesign\\n\\nPreviously, the layer editor is presented as a modal. It required multiple clicks to load a file and the interface is a bit confusing. In this version, the layer editor is redesigned as a popover and is significantly more usable.\\n\\n[Clip: Layer Editor](./assets/1-03-2024/1.2.0-layer-panel.mp4)\\n\\n### Steps Panel Redesign\\n\\nPreviously, the playback controls tend to be hidden from immediate sight due to all controls being on the main toolbar. In this version, the playback controls are separated into their own island.\\n\\n![Steps Panel](./assets/1-03-2024/steps-panel.png)\\n\\n### Event Properties View\\n\\nWe added a way to view all of the properties of an event. This can be opened through clicking on **See All Properties** of an event in the Steps panel.\\n\\n![Event Properties](./assets/1-03-2024/event-properties.png)\\n\\n### Panel Management\\n\\nWe added the ability reorganise your panels by moving them around. You can do this by dragging the handle in the top left corner.\\n\\n## System\\n\\n### Error Handling\\n\\nWe introduced a per-layer error API that displays an error label when a layer encounters a problem. For example, if a map couldn\'t load correctly.\\n\\n[Clip: Error Handling](./assets/1-03-2024/1.2.0-error-handling.mp4)\\n\\n### Workspaces\\n\\nWe introduced a simple import/export mechanism for quickly sharing or restoring your work. This can be found in the title bar menu (**Workspace** > **Open Workspace**, **Workspace** > **Save Workspace**).\\n\\n### Publish Workspaces\\n\\nWe designed a simple way to export your workspaces with metadata. In the future, you\'ll be able to upload these to a community repository.\\n\\n![Publish Workspace](./assets/1-03-2024/publish-workspace.png)\\n\\n### Drag and Drop\\n\\nYou can now drag and drop any assortment of files into the visualiser.\\n\\n[Clip: Drag and Drop](./assets/1-03-2024/1.2.0-drag-and-drop.mp4)\\n\\n### Filesystem Bridge Adapter (Experimental)\\n\\nTo help with development and debugging workflows, we provided a way to see live update of search traces. With the right tooling, you\'ll be able to make changes to your code and then immediately see its visualisation. We\'re still refining this feature.\\n\\n## Features\\n\\n### Explore\\n\\nWe added a hub for new users to try out built-in visualisations.\\n\\n![Explore Page](./assets/1-03-2024/explore-page.png)\\n\\nFor new users, this panel would display on start-up.\\n\\n![Explore Page Modal](./assets/1-03-2024/explore-page-modal.png)\\n\\n### Fit to Viewport\\n\\nWe introduced a way to fit specific layers to the viewport.\\n\\n[Clip: Fit to Viewport](./assets/1-03-2024/1.2.0-fit.mp4)\\n\\n### Filter Steps by Type\\n\\nWe added the ability to filter events in the Steps view by event type.\\n\\n![Steps Filter](./assets/1-03-2024/steps-filter.png)\\n\\n### Debugger Improvements\\n\\nThe debugger was updated with some new features. In the standard editor, you can now specify to break when a value changed from its parent. In the advanced editor, you now get access to `parent` and `children` variables.\\n\\n![Debugger](./assets/1-03-2024/debugger.png)\\n\\n## 2D Renderer\\n\\n### Performance Improvements\\n\\nWe slightly improved perceived performance by increasing resolution when playback is paused and decreasing resolution when it is playing. We also implement dynamic framerate so the playback should feel more consistent.\\n\\n# Known Issues\\n\\nSee issues on [our bug tracker](https://github.com/path-visualiser/app/issues).\\n\\n# Releases\\n\\nSee releases for v1.2.0 [here](https://github.com/path-visualiser/app/releases/tag/v1.2.0)."},{"id":"1.0.4","metadata":{"permalink":"/blog/1.0.4","editUrl":"https://github.com/path-visualiser/path-visualiser.github.io/tree/master/blog/2023-09-22-changelog/index.md","source":"@site/blog/2023-09-22-changelog/index.md","title":"Posthoc v1.0.4","description":"Changes","date":"2023-09-22T00:00:00.000Z","formattedDate":"September 22, 2023","tags":[{"label":"changelog","permalink":"/blog/tags/changelog"},{"label":"v1.0.4","permalink":"/blog/tags/v-1-0-4"}],"readingTime":4.565,"hasTruncateMarker":false,"authors":[{"name":"Kevin Zheng","title":"Posthoc lead developer","url":"https://github.com/spaaaacccee","imageURL":"https://github.com/spaaaacccee.png","key":"kzheng"}],"frontMatter":{"slug":"1.0.4","title":"Posthoc v1.0.4","authors":["kzheng"],"tags":["changelog","v1.0.4"]},"unlisted":false,"prevItem":{"title":"Posthoc v1.2.0","permalink":"/blog/1.2.0"}},"content":"## Changes\\n\\n### Architecture Changes\\n\\n#### UI Overhaul\\n\\nWaypoint is completely rebuilt to support dynamic and reconfigurable panels, so you can adjust the UI to fit your workflow or use case. Check out the [use cases](#use-cases) section for examples.\\n\\n![aux-1](./assets/22-09-2023/aux-1.png)\\n\\n#### Layers\\n\\nVisualise what you need by adding it as a layer to the app.\\n\\n##### Trace Layer\\n\\nThe **Trace** layer renders a search trace. Search traces are JSON documents produced by pathfinding solvers that record steps in the search process.\\n![trace](./assets/22-09-2023/trace.png)\\n\\n##### Map Layer\\n\\nThe **Map** layer renders maps in a supported format.\\n\\n![map](./assets/22-09-2023/map.png)\\n\\n##### Query Layer\\n\\nThe **Query** layer interfaces with solvers to display search traces for arbitrary problem instances.\\n\\n![query](./assets/22-09-2023/query.png)\\n\\n#### Extensible Renderer System\\n\\nRenderers (a.k.a. the Viewport panel) can now be added to Waypoint via extensions (the exact implementation is work-in-progress). This will allow for future renderers to be added with ease (for example, a 3D renderer).\\n\\n![renderer](./assets/22-09-2023/renderer.png)\\n\\n#### Layers Panel\\n\\nManage view layers using the **Layers** panel.\\n\\n#### Viewport Panel\\n\\nThe **Viewport** panel renders your layers by making use of an installed renderer (by default, the 2D renderer). You can choose which layers to render, as well as auto-fit the contents to the viewport, or display the contents at 1:1 scale.\\n\\n#### Tree Panel\\n\\nIf your pathfinding search problem does not have a convenient spatial embedding (or if you just wanted to), you can also visualise any search trace in a hierarchal format with the **Tree** panel. You can choose how many nodes to render at once.\\n\\n#### Steps Panel\\n\\nView and replay the recorded events of the search process using the **Steps** panel.\\n\\n#### Debugger Panel\\n\\nDebug a search trace using the **Debugger** panel. This feature is currently non-functional in version 1.0.4.\\n\\n#### Settings Panel\\n\\nManage connections to solvers and renderers in the **Settings** panel.\\n\\n#### Logs Panel\\n\\nWaypoint will keep a record of all alerts in the **Logs** panel.\\n\\n### Features\\n\\n#### 2D Renderer (Built-in)\\n\\nThe basic 2D renderer is built to be reliable and highly performant. Internally, it delegates rendering to background processes. The main process figures out which sections of the screen needs to be repainted (and what resolution) and requests those tiles from the subprocesses.\\n\\n![renderer](./assets/22-09-2023/renderer.gif?raw=true)\\n\\n[Click here for full size](./assets/22-09-2023/renderer.mkv)\\n\\n#### Grid, Network (XY), Poly, Mesh Map Support\\n\\nThere is built-in support for grid (`.grid/.map`), network (`.co/.gr/.xy`), mesh (`.mesh`), and polygon (`.poly`) map files. Conversions may be required.\\n\\n|                      | Grid                                  | Network                                             | Mesh                                  | Poly          |\\n| -------------------- | ------------------------------------- | --------------------------------------------------- | ------------------------------------- | ------------- |\\n| Conversions required | Rename your `*.map` files to `*.grid` | Use `dimacs2xy` to convert `.co/.gr` files to `.xy` | Update your `.mesh` file to version 3 | None required |\\n\\n#### Large Map Rendering Support\\n\\nThe renderer and map parser performs optimisations to handle the rendering of large maps.\\n\\n![large-map-florida](./assets/22-09-2023/large-map-florida.gif?raw=true)\\n\\n[Click here for full size](./assets/22-09-2023/large-map-florida.mkv)\\n\\n### Use Cases <a id=\\"use-cases\\"></a>\\n\\n#### Visualising a Search Trace\\n\\nLoad a search trace and map into Waypoint.\\n\\n![basic](./assets/22-09-2023/basic.gif?raw=true)\\n\\n[Click here for full size](./assets/22-09-2023/basic.mkv)\\n\\n#### Interacting with a Search Trace (Viewport, Steps and Tree)\\n\\nMove around a search trace through the Viewport, Tree, and Steps panel.\\n\\n![interactive](./assets/22-09-2023/interactive.gif?raw=true)\\n\\n[Click here for full size](./assets/22-09-2023/interactive.mkv)\\n\\n#### Creative Use of the Search Trace Format (Polyanya)\\n\\nThe example uses the search trace format to tell the renderer to draw each event in the search process as a triangle.\\n\\n![polyanya](./assets/22-09-2023/polyanya.png)\\n\\n#### Creative Use of the Search Trace Format (9-Tile)\\n\\nThis example uses the search trace format to tell the renderer how to display the current state of a 9-tile puzzle.\\n\\n![nine-tile](./assets/22-09-2023/nine-tile.png)\\n\\n#### Running a Search Query\\n\\nThis example runs a query using Warthog (WebAssembly) over a grid map.\\n\\n![query](./assets/22-09-2023/query.gif?raw=true)\\n\\n[Click here for full size](./assets/22-09-2023/query.mkv)\\n\\n#### Comparison of Two Traces\\n\\nThis example compares the search process of two A\\\\* implementations, one as a Search Trace file, and another as a query. We display these side-by-side.\\n\\n![comparison](./assets/22-09-2023/comparison.gif?raw=true)\\n\\n[Click here for full size](./assets/22-09-2023/comparison.mkv)\\n\\n### Releases\\n\\n#### Waypoint Standalone (Electron) for Windows\\n\\nGet Waypoint as a standalone application for Windows.\\n\\n[View Releases](https://github.com/path-visualiser/app/releases)\\n\\n#### Waypoint Standalone (Electron) for Linux\\n\\nGet Waypoint as a standalone application for Linux.\\n\\n[View Releases](https://github.com/path-visualiser/app/releases)\\n\\n#### Waypoint PWA (Github Pages)\\n\\nUse Waypoint in your browser, or install it as a web app.\\n\\n[Open Waypoint](https://path-visualiser.github.io/app/)\\n\\n#### Warthog (WebAssembly) Solver Adapter\\n\\nThis is the Warthog solver compiled to WebAssembly. Add this URL as a **Web Worker** connection in Waypoint (it should also be there by default).\\n\\n`https://cdn.jsdelivr.net/gh/path-visualiser/app@adapter-warthog-wasm-dist/warthog-wasm.mjs`\\n\\n#### Warthog (Socket.io/WebSocket) Solver Adapter\\n\\nThis is the Warthog solver running behind an adapter server. The adapter translates requests into Warthog problem instances, and converts Warthog output into the search trace format. The visualiser and solver communicates through a WebSocket channel.\\n\\n```shell\\ngit clone https://github.com/path-visualiser/app\\ncd ./app/adapter-warthog-websocket\\nnpm i\\nnpm start\\n```\\n\\nThen, as prompted, add the server\'s URL as a **Socket.io** connection in Waypoint.\\n\\n#### Iron Harvest Map Adapter\\n\\nThis is an example adapter that exclusively serves iron harvest grid maps to demonstrate how you could serve maps as well as run search queries.\\n\\n```shell\\ngit clone https://github.com/path-visualiser/app\\ncd ./app/adapter-iron-harvest\\nnpm i\\nnpm start\\n```\\n\\nThen, as prompted, add the server\'s URL as a **Socket.io** connection in Waypoint.\\n\\n### Known Issues\\n\\n#### Freeze on Large Search Traces\\n\\nWaypoint may freeze when the search trace contains too many steps. This is due to the inefficient way the path is currently calculated.\\n\\n#### Cannot Choose Source and Destination Nodes for Queries on Network Maps\\n\\nCurrently, queries on the network maps will force the source and destination nodes to be `0`."}]}')}}]);